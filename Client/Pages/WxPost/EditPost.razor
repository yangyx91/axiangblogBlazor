@page "/editwxpost/{postId}"

@inject HttpClient http

<h3>编辑文章</h3>
<form>
    <EditForm Model="@wxPost" OnValidSubmit="@EditOnePost">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @if (!string.IsNullOrEmpty(PostId))
        {
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">PostId:</label>
                <div class="col-sm-6">
                    <InputText @bind-Value="wxPost.PostId" class="form-control" />
                </div>
            </div>
        }
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Title:</label>
            <div class="col-sm-6">
                <InputText @bind-Value="wxPost.Title" class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Description:</label>
            <div class="col-sm-6">
                <InputTextArea @bind-Value="wxPost.Description" class="form-control"/>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">PostUrl:</label>
            <div class="col-sm-6">
                <InputTextArea @bind-Value="wxPost.PostUrl" class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Tags:</label>
            <div class="col-sm-6">
                <InputText @bind-Value="wxPost.Tags" class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Topic:</label>
            <div class="col-sm-6">
                <InputText @bind-Value="wxPost.Topic" class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Thumbnail:</label>
            <div class="col-sm-6">
                <InputTextArea @bind-Value="wxPost.Thumbnail" class="form-control" />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">File:</label>
            <div class="col-sm-6">
                <InputFile OnChange="@OnInputFileChange" class="form-control-file" multiple />
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Preview:</label>
            <div class="col-sm-6">
                <img class="rounded m-1" src="@imageDataUrl" />
                <button class="btn btn-primary" @onclick="UploadThumbnail">Upload</button>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">PostType:</label>
            <div class="col-sm-6">
                <InputSelect @bind-Value="wxPost.PostType" class="form-control">
                    <option value="">Select ...</option>
                    @if (wxPostTypeDocuments.Count() > 0)
                    {
                        foreach (var wxPostType in wxPostTypeDocuments)
                        {
                            <option value="@wxPostType.PostType">@wxPostType.PostType</option>}
                    }
                </InputSelect>
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">IsTop:</label>
            <div class="col-sm-6">
                <div class="form-check">
                    <InputCheckbox @bind-Value="wxPost.IsTop" class="form-check-input" />
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-sm-2 col-form-label">PostDate:</label>
            <div class="col-sm-6">
                <InputDate @bind-Value="wxPost.PostDateTime" class="input-group-text" />
            </div>
        </div>
        <div class="form-group row">
            <div class="col-sm-10">
                <button type="submit" class="btn btn-primary">保存</button>
            </div>
        </div>
    </EditForm>
    <p>处理结果：@result</p>
</form>
@code {

    [Parameter]
    public string PostId { get; set; }

    private string result="";

    private WxPostDocument wxPost = new WxPostDocument() {
        IsTop=false
    };

    private List<WxPostTypeDocument> wxPostTypeDocuments = new List<WxPostTypeDocument>();

    private string imageDataUrl="";

    private string bucketDomain = "https://pan.axiangblog.com";

    protected async override Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(PostId))
        {
            var apiRes = await http.PostAsJsonAsync<QueryWxPostParams>("https://openapi.axiangblog.cn/wxPostApi/v1/getWxPosts", new QueryWxPostParams()
            {
                postId=PostId
            });
            var res = await apiRes.Content.ReadAsStringAsync();

            if (!string.IsNullOrEmpty(res))
            {
                try
                {
                    var wxPostResult = System.Text.Json.JsonSerializer.Deserialize<WxPost_Response>(res);

                    if (wxPostResult != null && wxPostResult.data != null && wxPostResult.data.Count() > 0)
                    {
                        var wxPosts = wxPostResult.data;
                        wxPost = wxPosts.FirstOrDefault();
                        wxPost.PostDateTime = DateTime.Parse(wxPost.PostDate);
                        imageDataUrl = wxPost.Thumbnail;
                    }
                }
                catch (Exception ex)
                {

                    throw;
                }

            }
        }
        else
        {
            PostId = "";
            wxPost.PostId = "";
        }
        wxPostTypeDocuments = new List<WxPostTypeDocument>();
        var apiwxPostTypeRes = await http.PostAsJsonAsync<QueryWxPostTypeParams>("https://openapi.axiangblog.cn/wxPostTypeApi/v1/getWxPostTypes", new QueryWxPostTypeParams()
        {
            postType = "",
            postTypeId = ""
        });
        var wxPostTyperes = await apiwxPostTypeRes.Content.ReadAsStringAsync();

        if (!string.IsNullOrEmpty(wxPostTyperes))
        {
            try
            {
                var wxPostResult = System.Text.Json.JsonSerializer.Deserialize<WxPostTypes_Response>(wxPostTyperes);

                if (wxPostResult != null && wxPostResult.data != null && wxPostResult.data.Count() > 0)
                {
                    var wxPosts = wxPostResult.data;
                    foreach (var wxPost in wxPosts)
                    {
                        wxPostTypeDocuments.Add(wxPost);
                    }
                }
            }
            catch (Exception ex)
            {

                throw;
            }

        }
        //StateHasChanged();
    }

    private async Task EditOnePost()
    {
        if (!string.IsNullOrEmpty(wxPost.Title)&& !string.IsNullOrEmpty(wxPost.PostId))
        {
            wxPost.PostDate = wxPost.PostDateTime.ToString("yyyy-MM-dd");
            var apiRes = await http.PostAsJsonAsync<WxPostDocument>("https://openapi.axiangblog.cn/wxPostApi/v1/editWxPost", wxPost);
            var res = await apiRes.Content.ReadAsStringAsync();

            if (!string.IsNullOrEmpty(res))
            {
            }
            result = res;
        }
        else
        {
            result = "Title为null";
        }
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var maxAllowedFiles = 1;
        long maxFileSize = 1024 * 1024 * 15;

        foreach (var imageFile in e.GetMultipleFiles(maxAllowedFiles))
        {
            var format = imageFile.ContentType;
            var resizedImageFile = await imageFile.RequestImageFileAsync(format,
        600, 400);
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream(maxFileSize).ReadAsync(buffer);
            imageDataUrl =
            $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        }
    }

    private async Task UploadThumbnail()
    {
        if (!string.IsNullOrEmpty(imageDataUrl)&& imageDataUrl.Contains("base64"))
        {
            var uploadResult = await http.PostAsJsonAsync<string>("api/uploadImg", imageDataUrl);

            var res = await uploadResult.Content.ReadAsStringAsync();

            if (!string.IsNullOrEmpty(res) && res.StartsWith("/"))
            {
                imageDataUrl = bucketDomain + res;
                wxPost.Thumbnail = imageDataUrl;
                var currentDateTime = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, TZConvert.GetTimeZoneInfo("Asia/Shanghai"));
            }
        }
        else
        {
            imageDataUrl = "";
        }
    }
}
