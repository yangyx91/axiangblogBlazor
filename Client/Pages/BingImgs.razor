@page "/bingimgs"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Graph
@inject HttpClient http
@attribute [Authorize]
@inject GraphServiceClient GraphClient

<h3>Imgs</h3>


@if (user != null)
{
@if (imageDocuments.Count > 0)
{
<h4>Images</h4>

<div class="card" style="width:30rem;">
    <div class="card-body">
        @foreach (var img in imageDocuments)
        {
        <p>ImgId:@img.imgId</p>
        <img class="rounded m-1" src="@img.Url" />
        <p>Name:@img.Title</p>
        <p>Url:@img.Url</p>
        <p>CreateDate:@img.CreateDate</p> }
    </div>
</div>}}

<p><button class="btn btn-primary" @onclick="GetImgs">获取图片</button></p>

@code { private string imageName;

    private long upYunBucketUsage = 0;

    private IList<BingImgDocument> imageDocuments = new List<BingImgDocument>();

    private User user;

    protected async override Task OnInitializedAsync()
    {
        var request = GraphClient.Me.Request();
        user = await request.GetAsync();
    }

    private async Task GetImgs()
    {
        var apiRes = await http.PostAsJsonAsync<QueryBingImgParams>("https://openapi.axiangblog.com/getBingImgs/v1/", new QueryBingImgParams()
        {
            page = 1,
            pageSize=50
        }) ;
        var res = await apiRes.Content.ReadAsStringAsync();

        if (!string.IsNullOrEmpty(res))
        {
            try
            {
                var imgResult = System.Text.Json.JsonSerializer.Deserialize<BingImg_Response>(res);

                if (imgResult != null && imgResult.data!=null && imgResult.data.Count() > 0)
                {
                    var allImgs = imgResult.data;
                    foreach (var item in allImgs)
                    {
                        imageDocuments.Add(item);
                    }
                }
            }
            catch (Exception ex)
            {

                throw;
            }

        }
    }
}
