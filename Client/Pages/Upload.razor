@page "/upload"
@using Microsoft.AspNetCore.Authorization

@inject HttpClient http
@attribute [Authorize]

<h3>Upload PNG images</h3>

<p>
    <InputFile OnChange="@OnInputFileChange" multiple />
</p>

@if (imageDataUrls.Count > 0)
{
    <h4>Images</h4>

    <div class="card" style="width:30rem;">
        <div class="card-body">
            @foreach (var imageDataUrl in imageDataUrls)
            {
                <p>Name:@imageName</p>
                <img class="rounded m-1" src="@imageDataUrl" />
                <button class="btn btn-primary" @onclick="UploadImg">Upload Img</button>
            }
        </div>
    </div>
}

<p>UpYun可用空间：@upYunBucketUsage<button class="btn btn-primary" @onclick="GetUpYunBucket">查询</button></p>

@code {

    private string imageName;

    private long upYunBucketUsage=0;

    private IList<string> imageDataUrls = new List<string>();

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var maxAllowedFiles = 1;
        long maxFileSize = 1024 * 1024 * 15;
        var format = "image/jpg";

        foreach (var imageFile in e.GetMultipleFiles(maxAllowedFiles))
        {
            var resizedImageFile = await imageFile.RequestImageFileAsync(format,
            600, 400);
            var buffer = new byte[resizedImageFile.Size];
            await resizedImageFile.OpenReadStream(maxFileSize).ReadAsync(buffer);
            var imageDataUrl =
                $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            imageName = imageFile.Name;
            imageDataUrls.Add(imageDataUrl);
        }
    }

    private async Task UploadImg()
    {
        var a = imageDataUrls[0];
        var uploadResult = await http.PostAsJsonAsync<string>("api/uploadImg",a);

        var res=await uploadResult.Content.ReadAsStringAsync();

        if (!string.IsNullOrEmpty(res) && res.Contains("https://"))
        {
            imageDataUrls[0] = res;

            var logRes=await http.PostAsJsonAsync<LogDocument>("api/logger", new LogDocument()
            {
                id = DateTime.Now.ToString("yyyyMMddHHmmss"),
                LogId = DateTime.Now.ToString("yyyyMMddHHmmss"),
                LogDate = DateTime.Now.ToString("yyyy-MM-dd"),
                Creator = "upload",
                LogLevel = "LogInfo",
                LogInfo = string.Format("imageName:{0},imageUrl:{1}", imageName,res),
                LogDebug = "",
                LogError = ""
            });
        }
    }

    private async Task GetUpYunBucket()
    {
        upYunBucketUsage = await http.GetFromJsonAsync<long>("api/upYunUsage");
    }

    public class LogDocument
    {
        public string id { get; set; }

        public string rev { get; set; }
        public string LogId { get; set; }
        public string LogDate { get; set; }
        public string LogLevel { get; set; }
        public string LogInfo { get; set; }
        public string LogDebug { get; set; }
        public string LogError { get; set; }
        public string Creator { get; set; }
    }
}