@page "/onedrive"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Graph
@attribute [Authorize]
@inject GraphServiceClient GraphClient


<h3>OneDrive</h3>

@if (user != null)
{
<button class="btn btn-primary" @onclick="GetFiles">Get Files</button>
}

@if (driveItems.Count > 0)
{
    <div class="form-group row">
        <label class="col-sm-10 col-form-label">当前选中文件：@selectFileName</label>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">下载直链URL：</label>
            <div class="col-sm-8">
                <textarea class="form-control" rows="5">@selectDownloadUrl</textarea>
            </div>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Folder</th>
                <th scope="col">User</th>
                <th scope="col">Size</th>
                <th scope="col">Link</th>
                <th scope="col">Download URL</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in driveItems) 
        { 
            <tr>
                @*<td>@item.Id</td>*@
                <td>@item.Name</td>
                @if (item.Folder != null && item.Folder.ChildCount >= 0)
                {
                    <td>Folder</td> 
                }
                else
                {
                    <td>@item.File.MimeType</td>
                }
                <td>@item.Size</td>
                <td>@item.CreatedDateTime.Value.ToString("yyyy-MM-dd HH:mm:ss")</td>
                <td><a href="@item.WebUrl">Link</a></td>
                <td>
                    @if (item.Folder == null)
                    {
                        <button class="btn btn-primary" @onclick="(() => GetDownloadUrl(item.Id,item.Name) )">Get</button>
                    }
                    @if (item.Folder != null&& item.Folder.ChildCount>0)
                    {
                <button class="btn btn-primary" @onclick="(() => GetChildren(item.Id) )">GetChildren</button>}
                    @if (isBack)
                    {
                        <button class="btn btn-primary" @onclick="(() => BackParentFolder(item.ParentReference.Id) )">Back</button>
                    }
                </td>
            </tr>
         }
    </tbody>
</table>}

@code {

    private User user;

    private bool isBack = false;

    private string selectFileName="无";

    private string selectDownloadUrl="无";

    private IList<DriveItem> driveItems = new List<DriveItem>();

    protected async override Task OnInitializedAsync()
    {
        var request = GraphClient.Me.Request();
        user = await request.GetAsync();
    }

    private async Task GetFiles()
    {
        var request = GraphClient.Me.Drive.Root.Children.Request();
        driveItems = await request.GetAsync();
    }

    private async Task GetDownloadUrl(string id,string name)
    {
        selectFileName = name;
        var driveItem = await GraphClient.Me.Drive.Items[id].Request().GetAsync();
        if (driveItem!=null)
        {
            selectDownloadUrl = (string)driveItem.AdditionalData["@microsoft.graph.downloadUrl"];
        }

    }

    private async Task GetChildren(string id)
    {
        var request = GraphClient.Me.Drive.Items[id].Children.Request();
        var items = await request.GetAsync();
        if (items.Count()>0)
        {
            driveItems = items;
            isBack = true;
        }
    }

    private async Task BackParentFolder(string id)
    {
        var request = GraphClient.Me.Drive.Items[id].Request();
        var item = await request.GetAsync();
        if (item!=null )
        {
            var items = await GraphClient.Me.Drive.Items[item.ParentReference.Id].Children.Request().GetAsync();
            if (items.Count()>0)
            {
                driveItems = items;
                isBack = true;
            }

            if (item.ParentReference.Id== "01LOLRCNV6Y2GOVW7725BZO354PWSELRRZ")
            {
                isBack = false;
            }
        }
    }
}